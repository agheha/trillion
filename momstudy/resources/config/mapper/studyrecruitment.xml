<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.momstudy.repository.dao.StudyRecruitmentDAO">
	<resultMap type="StudyRecruitment" id="studyRecruitmentMap">
		<result column="num" property="num" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="reg_date" property="regDate" />
		<result column="email" property="email" />
		<result column="condition" property="condition" />
		<result column="category_code" property="categoryCode" />
		<result column="address_code" property="addressCode" />
		<result column="study_num" property="studyNum" />
		<result column="open_condition" property="openCondition" />
		<result column="see_cnt" property="seeCnt" />
		<result column="file_group_code" property="fileGroupCode" />
		<result column="comment_group_code" property="commentGroupCode" />
		<result column="avr" property="avr" /> 
		<result column="pcnt" property="pCnt" />
		<result column="count" property="count" />
		<result column="name" property="studyName" />
	</resultMap>
	
	<!-- 모집글 전체 리스트 -->
	<select id="selectStudyRecruitment" resultMap="studyRecruitmentMap" parameterType="Search">
	select * 
	  from (select rownum as rnum, 
	               a.*,
	               count(*) over() as count
		  	  from (select str.*,
      			           (select round(avg(nvl(score, 0)), 1)
        		       		  from tb_review_study) avr,
        		       	    nvl(man, 1) pcnt
    				  from tb_study_recruitment str,
  					       tb_review_study rv,
    					  (select study_num, 
    					          count(*) man
                             from TB_PARTICIPANT
                            where condition = 2
                            group by study_num) c
    			      where c.STUDY_NUM(+) = str.STUDY_NUM
                        and str.study_num = rv.study_num(+)
           			<if test="type == 'email'">
			   	    	and str.email like '%' || #{keyword} || '%'
			   		</if>
			   		<if test="type == 'title'">
			   	   		and str.title like '%' || #{keyword} || '%'
			   		</if>
			   		<if test="type == 'content'">
			   	   		and str.content like '%' || #{keyword} || '%'
			   		</if>
           			<choose>  
						<when test="filter == 'seeCnt'"> 
							order by str.see_cnt desc
						</when>
						<when test="filter == 'regDate'">
							order by str.reg_date desc
						</when>
						<otherwise> <!-- 기본 조건은 평점으로 -->
							order by avr desc
						</otherwise>
					</choose>
					) a)
	 where rnum between #{begin} and #{end}		 
	</select>
	
	<!-- 모집글 상세 조회 -->
	<select id="selectOneStudyRecruitment" parameterType="int" resultMap="studyRecruitmentMap">
   		select str.*, s.name
  		  from tb_study_recruitment str
  		 inner join tb_study s
  		    on str.study_num = s.num
 		 where str.num = #{num}
	</select>
	
	<!-- 모집글 등록 -->
	<insert id="insertStudyRecruitment" parameterType="StudyRecruitment">
		insert into tb_study_recruitment(
			num, title, content, email, category_code, address_code, study_num
		) values (
            seq_study_recruitment_num.nextval, 
            #{title}, 
            #{content}, #{email}, 
            #{categoryCode}, 
            #{addressCode}, 
            #{studyNum} 
		)
	</insert>
	
	<!-- 모집글 수정 -->
	<update id="updateStudyRecruitment" parameterType="StudyRecruitment">
 		update tb_study_recruitment
   		   set title = #{title},
    	       content = #{content}
         where num = #{num}  
	</update>
	
	<!-- 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		update tb_study_recruitment
		   set see_cnt = see_cnt + 1
		 where num = #{num}
	</update>
	
	<!-- 모집글 삭제 -->
	<delete id="deleteStudyRecruitment" parameterType="int" >
 		delete
          from tb_study_recruitment
         where num = #{num}
	</delete>
	
	<!-- 스터디모집글을 스터디번호로 가져오기 -->
	<select id="whetherStudyRecruitment" parameterType="int" resultType="StudyRecruitment">
		select *
		  from tb_study_recruitment
		 where study_num = #{studyNum}
	</select>

<!-- ========================================================= -->

	<resultMap type="Category" id="categoryMap">
		<result column="category_code"  property="categoryCode"/>
		<result column="category_name"  property="categoryName"/>
	</resultMap>
	<select id="categorySelect" resultMap="categoryMap">
		select * 
		from tb_category 
	</select>
	
<!-- ========================================================= -->
	
	<resultMap type="File" id="fileMap">
		<result column="no"  property="no"/>
		<result column="org_name"  property="orgName"/>
		<result column="system_name"  property="systemName"/>
		<result column="path"  property="path"/>
		<result column="file_group_code" property="groupCode"/>		
	</resultMap>
	<select id="selectFile" parameterType="int" resultMap="fileMap">
		select *
		from tb_review_study r
		inner join tb_file f
		on r.file_group_code = f.file_group_code
		where study_num = ${studyNum}
	</select>
	
	</mapper>