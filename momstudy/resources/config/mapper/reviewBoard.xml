<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.momstudy.repository.dao.ReviewBoardDAO">

	<resultMap type="ReviewBoard" id="reviewBoardMap">
		<result column="num"  property="num"/>
		<result column="title"  property="title"/>
		<result column="content"  property="content"/>
		<result column="reg_date"  property="regDate"/>
		<result column="study_num"  property="studyNum"/>
		<result column="see_cnt"  property="seeCnt"/>
		<result column="score"  property="score"/>
		<result column="email"  property="email"/>
		<result column="file_group_code"  property="fileGroupCode"/>
		<result column="comment_group_code"  property="commentGroupCode"/>
	</resultMap>

	<select id="selectReviewBoard" resultMap="reviewBoardMap">
		    select *
              from (select rownum rnum,a.*
					  from(select *
				       	     from (select a.*,
                                        c.category_code as category_code,
                                        c.name as name
                               	     from tb_review_study a
                              	    inner join tb_study c
                                       on a.study_num = c.num)
	                        <where>
	                      	    <choose>
		                      	    <when test="type == 'title'">
		                        	  title like '%'||#{keyword}||'%'
		                      	    </when>
		                      	    <when test="type == 'email'">
		                        	  email like '%'||#{keyword}||'%'
		                      	    </when>
		                      	    <when test="type == 'content'">
		                        	  content like '%'||#{keyword}||'%'
		                      	    </when>
		                      	    <when test="type == 'name'">
		                        	  name like '%'||#{keyword}||'%'
		                      	    </when>
	                      	    </choose> 
	                      	    <if test="categoryCode != 0">                      	    
	                      	      category_code = #{categoryCode}
	                      	    </if> 
                            </where>
                       	    order by 
                      	    <choose>
								<when test="filter =='regDate'">
	                      	    	reg_date 
								</when>
								<when test="filter =='seeCnt'">
	                      	    	see_cnt 
								</when>
								<when test="filter =='score'">
	                      	    	score 
								</when>
                      	    </choose>                       	    
                      	    desc
                      	    ) a)
             where rnum between #{begin} and #{end}
	</select>
	
	<insert id="insertReviewBoard" parameterType="ReviewBoard">
		insert into tb_review_study (
		    num, title, content, study_num, score, email
		) values (
		    seq_review_study_num.nextVal, #{title}, #{content}, #{studyNum}, #{score}, #{email}
		)
	</insert>
	
	<update id="updateViewCnt" parameterType="int">
		update tb_review_study 
		   set see_cnt = see_cnt + 1
		 where no = #{no}
	</update>
	
	<select id="selectOneBoard" parameterType="int" resultMap="reviewBoardMap">
		select *
		from tb_review_study
		where num = #{num}
	</select>
	
	<update id="updateReviewBoard" parameterType="Board">
		update tb_review_study 
		   set content = #{content},
		   	   title = #{title},
		       score = #{score}
		 where num = #{num}
	</update>
	
	<delete id="deleteReviewBoard" parameterType="int">
		delete 
		  from tb_review_study 
		 where num = #{num}
	</delete>
	
	
	<resultMap type="Category" id="categoryMap">
		<result column="category_code"  property="categoryCode"/>
		<result column="category_name"  property="categoryName"/>
	</resultMap>
	<select id="categorySelect" resultMap="categoryMap">
		select * 
		from tb_category
	</select>
	
	<select id="listCount" resultType="int">
		select count(*)
		from tb_review_study
	</select>
	
	
	
	<!-- ====================================================== -->
	<!-- ====================================================== -->
	
	<resultMap type="Study" id="studyMap">
		<result column="name"  property="name"/>
		<result column="reg_date"  property="regDate"/>
		<result column="email"  property="email"/>
		<result column="category_code"  property="categoryCode"/>
		<result column="address_code"  property="addressCode"/>
		<result column="num"  property="num"/>
	</resultMap>
	
	<select id="selectStudy" resultMap="studyMap" parameterType="String">
		select * 
		from (select * 
			  from tb_study 
			  where num not in(select study_num 
			  				   from (select count(*),study_num 
			  				   		 from tb_review_study where email = #{email} 
			  				   		 group by study_num))) 
		a inner join tb_participant b 
		on a.num = b.study_num 
		where b.email = #{email}
	</select>
	
	<select id="selectStudy2" resultMap="studyMap" parameterType="int">
		select * 
		from tb_study
		where num = #{studyNum}
	</select>
	
	
	
</mapper>
