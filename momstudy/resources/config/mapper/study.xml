<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.momstudy.repository.dao.StudyDAO">
	<resultMap type="Study" id="studyMap">
		<result column="name" property="name" />
		<result column="reg_date" property="regDate" />
		<result column="email" property="email" />
		<result column="category_code" property="categoryCode" />
		<result column="address_code" property="addressCode" />
		<result column="num" property="num" />
	</resultMap>

	<!-- 스터디 등록 -->
	<insert id="insertStudy" parameterType="Study">
		<selectKey keyProperty="num" resultType="int" order="BEFORE">
			select
			seq_study_num.nextval
			from dual
		</selectKey>
		insert into tb_study(name, email, category_code, address_code, num
		)
		values (#{name}, #{email}, #{categoryCode}, #{addressCode}, #{num})

	</insert>

	<!-- 스터디 등록한 사람 참여자로 넣음 -->
	<insert id="insertParticipant" parameterType="Participant">
		insert into
		tb_participant(num, email, condition, study_num
		) values
		(seq_participant_num.nextval, #{email}, #{condition}, #{studyNum})
	</insert>
	

	<!-- 참여한 스터디를 가져옴 -->
	<select id="selectStudy" parameterType="string"
		resultMap="studyMap">
		select *
		from tb_study
		where num in (select study_num
		from tb_participant
		where email = #{email} and condition = 2)
	</select>

	<select id="selectOneStudy" parameterType="int"
		resultMap="studyMap">
		select *
		from tb_study
		where num = #{num}
	</select>

	<delete id="deleteParticipant" parameterType="Participant">
		delete
		from tb_participant
		where email = #{email} and study_num = #{studyNum}
	</delete>

	<update id="aprovalParticipant" parameterType="Participant">
		update
		tb_participant
		set condition = 2
		where email = #{email} and study_num = #{studyNum}
	</update>

	<select id="selectScore" parameterType="string"
		resultType="Score">
		select score , 
			   count(*) over(partition by SCORE) as cnt, 
			   count(*) over() as total, 
			   round(count(*) over(partition by SCORE) / count(*) over() *100,0) as percent, 
			   round(avg(SCORE) over(),1) as avg 
		  from tb_review_user 
		 where email = #{email} 
		 order by score
	</select>
	
	<insert id="insertScore" parameterType="Score">
		insert into 
		tb_review_user (score, num, email, email_recom
		) values (#{score}, #{num}, #{email}, #{emailRecom})
	
	</insert>
	
	<select id="checkScore" parameterType="Score" resultType="int">
		select count(*)
		  from tb_review_user
		 where num = #{num} and email = #{email} and email_recom = #{emailRecom} 
	</select>
	

</mapper>