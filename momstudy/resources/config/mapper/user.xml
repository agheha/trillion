<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.momstudy.repository.dao.UserDAO">
	<resultMap type="User" id="userMap">
		<result column="email" property="email" />
		<result column="pass" property="pass" />
		<result column="name" property="name" />
		<result column="phone_num" property="phoneNum" />
		<result column="birth" property="birth" />
		<result column="status" property="status" />
		<result column="type" property="type" />
		<result column="ban_date" property="banDate" />
		<result column="file_group_code" property="fileGroupCode" />
		<result column="gender" property="gender" />
		<result column="part_date" property="partDate" />
		<result column="cnt" property="cnt" />
	</resultMap>
	
	<resultMap type="UserCategory" id="userCategoryMap">
		<result column="email" property="email"/>
		<result column="category_code" property="categoryCode"/>
	</resultMap>
	
	<resultMap type="Address" id="addressMap">
		<result column="address_code" property="addressCode"/>
		<result column="address_detail" property="addressDetail"/>
		<result column="address_detail2" property="addressDetail2"/>
	</resultMap>
	
	<resultMap type="UserArea" id="userAreaMap">
		<result column="eamil" property="email"/>
		<result column="address_code" property="addressCode"/>
	</resultMap>
	
	<resultMap type="Category" id="categoryMap">
		<result column="category_name" property="categoryName"/>
		<result column="category_code" property="categoryCode"/>
	</resultMap>
	
	<resultMap id="fileMap" type="File">
		<result column="no" property="no" />
		<result column="path" property="path" />
		<result column="org_name" property="orgName" />
		<result column="system_name" property="systemName" />
	</resultMap>
	
	<resultMap id="participantMap" type="Participant">
		<result column="num" property="num" />
		<result column="study_num" property="studyNum" />
		<result column="email" property="email" />
		<result column="partDate" property="partDate" />
		<result column="condition" property="condition" />
	</resultMap>
	<!-- 스터디 탈퇴 -->
	<delete id="deleteStudy" parameterType="Participant">
		delete 
		  from tb_participant
		 where email = #{email}
		   and num = #{num} 
	</delete>
	<!--  유저가 선택한 스터디 신청철회 -->
	<delete id="deleteParticipant" parameterType="Participant">
		delete
		  from tb_participant
		 where email = #{email}
		   and num = #{num}
	</delete>
	<!-- 유저가 신청한 스터디 이름과 정보  -->
	<select id="selectParticipant" parameterType="String" resultMap="participantMap">
		 select p.num num,
				s.email email, 
				p.part_date partDate, 
				p.condition condition, 
				p.study_num studyNum, 
				s.name name
		   from tb_participant p
	      inner join tb_study s
			 on p.study_num = s.num
			and condition = 1
			and p.email = #{email} 
			
	</select>
	<!-- 유저가 등록되어있는 스터디 정보 -->
	<select id="selectMyStudy" parameterType="String" resultMap="participantMap">
		 select p.num num,
				s.email email, 
				s.reg_date partDate, 
				p.condition condition, 
				p.study_num study_num, 
				s.name name
		   from tb_participant p
	      inner join tb_study s
			 on p.study_num = s.num
			and condition = 2
			and p.email = #{email} 
			and s.email != #{email}
	</select>
	<!-- 이메일 중복 체크 -->
	<select id="emailCheck" resultType="int" parameterType="String">
		select count(*) 
		  from tb_user
		 where email = #{email}
	</select>
	<!-- 	로그인 -->
	<select id="selectLogin" resultMap="userMap" parameterType="User">
		select * 
		  from tb_user
		 where email = #{email}
		   and pass = #{pass}
	</select>
	<!-- 비밀번호 찾기로 들어온 회원 정보 세션에 올리기위함 -->
	<select id="selectFindLogin" resultMap="userMap" parameterType="string">
		select * 
		  from tb_user
		 where email = #{email}
	</select>
	<!--  비밀번호 수정 -->
	<update id="updatePass" parameterType="User">
		update tb_user
		   set pass = #{pass}
		 where email = #{email}
	</update>
	<!-- 	회원가입 -->
	<insert id="insertUser" parameterType="User" >
		insert into tb_user(email, pass, name, phone_num, birth, gender)
		values(#{email}, #{pass}, #{name}, #{phoneNum}, #{birth}, #{gender})
	</insert>
	<!--  회원탈퇴 -->
	<delete id="deleteUser" parameterType="String">
		delete
		  from tb_user
		 where email = #{email}
	</delete>
	<!--  관심분야 -->
	<insert id="insertCategory" parameterType="UserCategory" >
		insert into tb_user_Category(email, category_code)
		values(#{email}, #{categoryCode})
	</insert>
	<!-- 카테고리 테이터 가져오기 -->
	<select id="selectCategory" resultMap="categoryMap">
		select * 
		  from tb_category
	</select>
	<!--  아이디 찾기 -->
	<select id="searchEmail" resultType="String" parameterType="User">
		select email
		  from tb_user
		 where name = #{name}
		   and phone_num = #{phoneNum}
	</select>
	<!--  비밀번호 찾기 --> 
	<select id="searchPass" parameterType="User" resultType="User">
		select * 
		  from tb_user
		 where name = #{name}
		   and email = #{email}
	</select>
	<!--  유저 카데고리 코드 찾기 -->
	<select id="selectUserCategoryCode" parameterType="string" resultMap="userCategoryMap">
		select *
		  from tb_user_category
		 where email = #{email}
	</select>
	<!--  유저 카데고리 수정 -->
	<delete id="deleteUserCategoryCode" parameterType="string">
		delete 
		  from tb_user_category
		 where email = #{email}
	</delete>	
	<!--  유저 관심분야 수정 -->
	<delete id="deleteUserAddressCode" parameterType="string">
		delete 
		  from tb_user_address
		 where email = #{email}
	</delete>	
	<!-- 내이미지 수정 시 그룹코드 등록 -->
	<update id="updateImgCode" parameterType="User">
		update tb_user
		   set file_group_code = #{fileGroupCode}
		 where email = #{email}
	</update>
	<!-- 주소의 대분류를 가져옴  -->
	<select id="selectBigAddress" resultMap="addressMap">
		select count(*) count, address_detail
 		  from tb_address
		 group by address_detail
	</select>	
	<!-- 내 이미지 가져오기 경로와 이름 가져오기  -->
	<select id="myimgGroupCode" parameterType="User" resultType="File">
		select f.path path, f.SYSTEM_NAME systemName
		  from tb_file f 
		 inner join tb_user u
 		    on f.file_group_code = u.file_group_code
 		 where u.file_group_code = #{fileGroupCode}
 		   and u.email = #{email}
	</select>
	<!-- 주소의 코드와 소분류를 가져옴  -->
	<select id="selectSmallAddress" resultMap="addressMap" >
		select *
		  from tb_address   
	</select>
	<!-- 유저 지역 추가 -->
	<insert id="insertAddress" parameterType="UserCategory" >
		insert into tb_user_address(email, address_code)
		values(#{email}, #{addressCode})
	</insert>
	<!--  유저관심지역 목록뽑기 -->
	<select id="selectUserArea" parameterType="String" resultMap="userAreaMap">
		select *
		  from tb_user_address
		 where email = #{email}
	</select>
	<!-- 현재비밀번호 확인하기 -->
	<select id="passCheck" parameterType="User" resultType="int">
		select count(*)
		  from tb_user
		 where pass = #{pass}
		   and email = #{email}
	</select>
	<!--  스터디별 참여인원 -->
	<select id="selectUserByStudyNum" parameterType="Search"
		resultMap="userMap">
		select *
		  from (select rownum rnum,
		               c.*,
		               count(*) over() as cnt
				from(select a.*,
                            b.PART_DATE 
                            from tb_user a
                            inner join tb_participant b
                               on a.email = b.email
                               where b.study_num = #{studyNum} and b.condition = 2   

			   	      	<if test="type == 'email'">
			   	      		and b.email like '%'||#{keyword}||'%'
			   	      	</if>
                               order by
			          <if test="filter == 'partDate'">
			          		part_date 
			          </if>
			          
			           desc) c)
		  where rnum between #{begin} and #{end}
	</select>
	
		<!--  스터디별 신청인원 -->
		<select id="selectUserByStudyNum2" parameterType="Search"
		resultMap="userMap">
		select *
		  from (select rownum rnum,
		               c.*,
		               count(*) over() as cnt
				from(select a.*,
                            b.PART_DATE 
                            from tb_user a
                            inner join tb_participant b
                               on a.email = b.email
                               where b.study_num = #{studyNum} and b.condition = 1   

			   	      	<if test="type == 'email'">
			   	      		and b.email like '%'||#{keyword}||'%'
			   	      	</if>
                               order by
			          <if test="filter == 'partDate'">
			          		part_date 
			          </if>
			          
			           desc) c)
		  where rnum between #{begin} and #{end}
	</select>
	
	<select id="selectAddress" parameterType="string" resultMap="addressMap">
		select *
 		  from tb_address
 		 where address_Detail = #{baddr}
	</select>
	
	<!-- 주소 코드 넣어서 주소 가져오기 -->
	<select id="selectAddressNum" parameterType="int" resultMap="addressMap">
		select *
		  from tb_address
		 where address_code = #{addressCode}
	</select>
	
	<!-- 스터디원 인원수 가져오기 -->
	<select id="countStudyMember" parameterType="int" resultType="int">
		select count(*)
		  from tb_participant
		 where num = #{studyNum}
		   and condition = 2
	</select>
	
	
</mapper>






















